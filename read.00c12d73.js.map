{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-d302d50f3ad158b6.js","src/read.js","src/js/accordion.js","src/js/render-ac-card.js","node_modules/@parcel/runtime-js/lib/runtime-1bccbf6f16d389a0.js","node_modules/@parcel/runtime-js/lib/runtime-85d247d694341ee7.js","node_modules/@parcel/runtime-js/lib/runtime-3287f7031201970b.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"jewIc\\\":\\\"read.00c12d73.js\\\",\\\"7XZkW\\\":\\\"defaultimage.febeee97.jpg\\\",\\\"dCaos\\\":\\\"icons.4066d7ef.svg\\\",\\\"9p2Wc\\\":\\\"default_hidden.b7ff1915.png\\\",\\\"hmz2r\\\":\\\"read.ab05926b.js\\\"}\"));","import './js/mobile-menu';\nimport './js/current-page';\nimport './js/toggle-switcher-theme';\nimport './js/search-form';\nimport './js/accordion';\nimport './js/render-ac-card';\n","const accordionEl = document.getElementsByClassName('.accordion__active');\n\nexport function initAccordion() {\n  const accordionEl = document.querySelectorAll('.accordion__wrap');\n\n  accordionEl.forEach(el => {\n    const activeEl = el.querySelector('.accordion__active');\n\n    activeEl.addEventListener('click', () => {\n      el.classList.toggle('active');\n    });\n  });\n}\n\ninitAccordion();\n","import NewArticles from './API-service/api-news';\nimport { initAccordion } from './accordion';\nimport svgSprite from '../images/icons/icons.svg';\nimport defImgPng from '../images/default_hidden.png';\nimport defImg from '../images/defaultimage.jpg';\nimport './btn-add-remove';\n\nconst containerEl = document.querySelector('.container__read');\nconst newAccorEl = document.querySelector('.accordion');\nconst response = JSON.parse(localStorage.getItem('readList')) || [];\n\nexport function pageEmpty(){\n  if (!response || response.length === 0){\n    return `\n    <div class=\"page-empty\">\n    <h2 class=\"page-empty__text\">You don't have any read news</h2>\n    <img src=\"${defImgPng}\" alt=\"You have not read news\" class=\"page-empty__img\">\n    </div>`\n  }\n  return ''\n}\n\nfunction newFormatArray(response){\n  const formattedItems = response.map(item => {\n    const newDate = new Date(item.readAt);\n    const formattedReadAt = `${newDate.getDate().toString().padStart(2, '0')}/${(newDate.getMonth() + 1).toString().padStart(2, '0')}/${newDate.getFullYear()}`;\n  \n    const newPublishedDate = new Date(item.published_date);\n    const formattedPublishedDate = `${newPublishedDate.getDate().toString().padStart(2, '0')}/${(newPublishedDate.getMonth() + 1).toString().padStart(2, '0')}/${newPublishedDate.getFullYear()}`;\n    \n    const { multimedia = [] } = item;\n    const imageUrl = multimedia && multimedia[2]?.url ? multimedia[2].url : defImg;\n    const imageAlt = multimedia && multimedia[2]?.caption ? multimedia[2].caption : 'Default Image';\n    \n    return {\n      ...item,\n      readAt: formattedReadAt,\n      published_date: formattedPublishedDate,\n      imageUrl,\n      imageAlt,\n    };\n  });\n  return formattedItems;\n}\n\nconst formattedItems = newFormatArray(response);\n\nexport function renderAccordion(){\n  containerEl.insertAdjacentHTML('beforeEnd', pageEmpty());\n\n  const uniqueDates = new Set();\n \n  formattedItems.forEach(({readAt}) => {\n      uniqueDates.add(readAt);\n    });\n    const markupAccordion = Array.from(uniqueDates)\n      .map((readAt ) => {\n          return `\n              <div class=\"accordion__wrap\">\n                  <div class=\"accordion__active\">\n                    <div class=\"read__date\">${readAt}</div>\n                    <svg class=\"accordion_icon\" width=\"15\" height=\"9\">\n                      <use href=\"${svgSprite}#icon-vector-down\"></use>\n                    </svg>\n                  </div>\n                  <hr class=\"accordion__line\">\n                  <div class=\"content\">\n                    <div class=\"news-card\">\n                      <ul class=\"news-card__image-container\">\n                      </ul>\n                    </div>\n                  </div>\n              </div>\n          `;\n    })\n    .join('');\n\n  newAccorEl.insertAdjacentHTML('beforeEnd', markupAccordion)\n  initAccordion();\n}\nrenderAccordion();\n\nfunction markupReadCard({ abstract, section, title, published_date, imageUrl, imageAlt, url }) {\n  return `\n    <li class=\"news-card__item\">\n      <div class=\"news-card__foto\">\n        <img src=\"${imageUrl}\" alt=\"${imageAlt}\" class=\"news-card__image\">\n        <div class=\"news-card__category\">\n        ${section}\n        </div>\n        <button class=\"news-card__favorite-button\" data-news-id=\"${title}\">\n        Add to favorite <svg width=\"13\" height=\"12\" class=\"news-card__favorite-icon\">\n        <use href=\"${svgSprite}#icon-favorite\"></use></svg>\n         </button>\n      </div>\n      <div class=\"news-card__description\">\n        <h2 class=\"news-card__title\">${title}</h2>\n        <p class=\"news-card__abstract\">\n        ${abstract}\n        </p>\n      </div>\n      <div class=\"news-card__container\">\n        <div class=\"news-card__date\">\n          ${published_date}\n        </div>\n      <a href=\"${url}\" target=\"_blank\" rel=\"noreferrer noopener nofollow\" class=\"news-card__read-more\" data-news-id=\"${title}\">\n        Read more\n      </a>\n    </div>\n  </li>\n  `\n}\n\nfunction addMarkupToCards() {\n  const readDates = document.querySelectorAll('.read__date');\n\n  // Группируем элементы массива по датам readAt\n  const groupedItems = formattedItems.reduce((acc, item) => {\n    const date = item.readAt;\n    if (!acc[date]) {\n      acc[date] = [];\n    }\n    acc[date].push(item);\n    return acc;\n  }, {});\n\n  // Добавляем разметку к каждому элементу соответствующей группы\n  readDates.forEach((dateEl) => {\n    const date = dateEl.textContent;\n    const items = groupedItems[date] || [];\n    const cardContainer = dateEl.closest('.accordion__wrap').querySelector('.news-card__image-container');\n    \n    items.forEach((item) => {\n      if (item.readAt === date) {\n        console.log(item)\n        cardContainer.insertAdjacentHTML('beforeEnd', markupReadCard(item));\n      }\n    });\n  });\n}\n\naddMarkupToCards()\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"dCaos\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"9p2Wc\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7XZkW\")).toString();"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","document","getElementsByClassName","$1f144ad68bc411c7$export$6e9847a60c738c4d","querySelectorAll","forEach","el","querySelector","addEventListener","classList","toggle","$0b3222e46369e54d$exports","URL","resolve","import","meta","url","toString","$4f50b5e50ffdae97$exports","$eec871c95434dc88$exports","$b22f7f824a0e3fae$var$containerEl","$b22f7f824a0e3fae$var$newAccorEl","$b22f7f824a0e3fae$var$response","localStorage","getItem","$b22f7f824a0e3fae$var$formattedItems","map","item","newDate","Date","readAt","formattedReadAt","getDate","padStart","getMonth","getFullYear","newPublishedDate","published_date","formattedPublishedDate","multimedia","imageUrl","$parcel$interopDefault","imageAlt","caption","insertAdjacentHTML","uniqueDates","Set","add","markupAccordion","Array","from","join","$b22f7f824a0e3fae$export$e70fdd583091eee2","readDates","groupedItems","reduce","acc","date","push","dateEl","textContent","items","cardContainer","closest","console","log","abstract","section","title","$b22f7f824a0e3fae$var$markupReadCard","$b22f7f824a0e3fae$var$addMarkupToCards"],"version":3,"file":"read.00c12d73.js.map"}