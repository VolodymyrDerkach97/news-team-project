function e(e,n,r,t){Object.defineProperty(e,n,{get:r,set:t,enumerable:!0,configurable:!0})}function n(e){return e&&e.__esModule?e.default:e}var r="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},t={},o={},a=r.parcelRequire2cb1;null==a&&((a=function(e){if(e in t)return t[e].exports;if(e in o){var n=o[e];delete o[e];var r={id:e,exports:{}};return t[e]=r,n.call(r.exports,r,r.exports),r.exports}var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}).register=function(e,n){o[e]=n},r.parcelRequire2cb1=a),a.register("kyEFX",(function(n,r){var t,o;e(n.exports,"register",(function(){return t}),(function(e){return t=e})),e(n.exports,"resolve",(function(){return o}),(function(e){return o=e}));var a={};t=function(e){for(var n=Object.keys(e),r=0;r<n.length;r++)a[n[r]]=e[n[r]]},o=function(e){var n=a[e];if(null==n)throw new Error("Could not resolve bundle with id "+e);return n}})),a("kyEFX").register(JSON.parse('{"jewIc":"read.23a4986c.js","dCaos":"icons.c34800cd.svg","9p2Wc":"default_hidden.b7ff1915.png","fcKtx":"read.334d648d.js"}')),a("8FnLx"),a("Jj8Ku"),a("fzJJC");document.getElementsByClassName(".accordion__active");function c(){document.querySelectorAll(".accordion__wrap").forEach((e=>{e.querySelector(".accordion__active").addEventListener("click",(()=>{e.classList.toggle("active")}))}))}c(),a("14MV6");var i;i=new URL(a("kyEFX").resolve("dCaos"),import.meta.url).toString();var d;d=new URL(a("kyEFX").resolve("9p2Wc"),import.meta.url).toString(),a("jcdIr");const s=document.querySelector(".container__read"),l=document.querySelector(".accordion");!function(){s.insertAdjacentHTML("beforeEnd",function(){const e=JSON.parse(localStorage.getItem("readList"));return e&&0!==e.length?"":`\n    <div class="page-empty">\n    <h2 class="page-empty__text">You don't have any read news</h2>\n    <img src="${n(d)}" alt="You have not read news" class="page-empty__img">\n    </div>`}());const e=JSON.parse(localStorage.getItem("readList"))||[],r=new Set;e.forEach((({published_date:e})=>{const n=new Date(e).toLocaleDateString("en-GB",{day:"2-digit",month:"2-digit",year:"numeric"});r.add(n)}));const t=Array.from(r).map((e=>`\n              <div class="accordion__wrap">\n                  <div class="accordion__active">\n                    <div class="read__date">${e}</div>\n                    <svg class="accordion_icon" width="15" height="9">\n                      <use href="${n(i)}#icon-vector-down"></use>\n                    </svg>\n                  </div>\n                  <hr class="accordion__line">\n                  <div class="content">\n                    <div class="news-card">\n\n                    </div>\n                  </div>\n              </div>\n          `)).join("");l.insertAdjacentHTML("beforeEnd",t),c()}();
//# sourceMappingURL=read.23a4986c.js.map
