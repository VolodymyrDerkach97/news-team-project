@use 'sass:math';

$width: 250px;
$radius: $width * 0.016891;
$transition: 0.3s;
$font-size: $width * 0.056;
$lightblue: lightblue;

#datepicker {
  box-sizing: border-box;
  width: 168px;

  @media screen and (max-width: $tablet-less) {
    width: 124px;
  }

  font-family: $font-main;
  font-weight: 400;
  font-size: 12px;
  line-height: 21px;

  text-align: center;
  height: 31px;
  padding: 5px;
  border: 1px solid $color-black-primary;
  border-radius: 20px;

  @media screen and (max-width: $tablet-less) {
    padding-left: 30px;
  }
}

.datepicker-selected {
  color: $color-white-primary;
  background: $color-accent;
  border: 1px solid $color-accent;
  transition-property: background;
  transition-duration: 250ms;
}

.calendar {
  position: relative;
  margin-top: 28px;

  @media screen and (min-width: $desktop) {
    margin-right: 52px;
  }
}

.callend-off,
.callend-on {
  position: absolute;
  left: 14px;
  top: 5px;
}

.callend-on {
  display: none;
}

.arrow-down,
.arrow-up {
  position: absolute;
  right: 12px;
  top: 10px;

  @media screen and (max-width: $tablet-less) {
    display: none;
    position: absolute;
  }
}

.arrow-up {
  display: none;
}

/*
  All a user has to do to change the calendar size is
  change the font-size on the container and everything
  magically resizes accordingly. Relative units ftw!
*/
.qs-datepicker-container {
  // font-size: 1rem;
  font-family: Manrope;
  color: black;
  position: absolute;
  width: $width;
  display: flex;
  flex-direction: column;
  z-index: 9001;
  user-select: none;
  border: 1px solid gray;
  border-radius: $radius;
  overflow: hidden;
  background: white;
  box-shadow: 0 ($width * 0.08) ($width * 0.08) ($width * -0.06)
    rgba(0, 0, 0, 0.3);

  * {
    box-sizing: border-box;
  }
}

.qs-centered {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.qs-hidden {
  display: none;
}

.qs-overlay {
  position: absolute;
  top: 0;
  left: 0;
  background: rgba(0, 0, 100, 0.75);
  color: $color-white-primary;
  width: 100%;
  height: 100%;
  padding: 0.5em;
  z-index: 1;
  opacity: 1;
  transition: opacity $transition;
  display: flex;
  flex-direction: column;

  &.qs-hidden {
    opacity: 0;
    z-index: -1;
  }

  .qs-overlay-year {
    // Overlay year input element.
    border: none;
    background: transparent;
    border-bottom: 1px solid $color-white-primary;
    border-radius: 0;
    color: $color-white-primary;
    font-size: $font-size;
    padding: 0.25em 0;
    width: 80%;
    text-align: center;
    margin: 0 auto;
    display: block;

    // https://goo.gl/oUuGkG
    &::-webkit-inner-spin-button {
      -webkit-appearance: none;
    }
  }

  .qs-close {
    padding: 0.5em;
    cursor: pointer;
    position: absolute;
    top: 0;
    right: 0;
  }

  .qs-submit {
    border: 1px solid $color-white-primary;
    border-radius: $radius;
    padding: 0.5em;
    margin: 0 auto auto;
    cursor: pointer;
    background: rgba(128, 128, 128, 0.4);

    &.qs-disabled {
      color: gray;
      border-color: gray;
      cursor: not-allowed;
    }
  }

  .qs-overlay-month-container {
    display: flex;
    flex-wrap: wrap;
    flex-grow: 1;
  }

  .qs-overlay-month {
    display: flex;
    justify-content: center;
    align-items: center;
    width: #{'calc(100% / 3)'};
    cursor: pointer;
    opacity: 0.5;
    transition: opacity math.div($transition, 2);

    &.active,
    &:hover {
      opacity: 1;
    }
  }
}

.qs-controls {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-grow: 1;
  flex-shrink: 0;
  // background: $color-gray-primary;
  filter: blur(0px);
  transition: filter $transition;

  &.qs-blur {
    filter: blur(5px);
  }
}

.qs-arrow {
  height: math.div($width, 10);
  width: math.div($width, 10);
  position: relative;
  cursor: pointer;
  border-radius: $radius;
  transition: background 0.15s;
  display: flex;
  justify-content: center;
  align-items: center;

  &.qs-left {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='9' height='18' viewBox='0 0 9 18'%3E%3Cpath fill='%234440F6' d='M0 9c0 .335.115.623.361.872l6.858 7.302c.194.211.441.326.732.326.582 0 1.049-.498 1.049-1.14 0-.317-.123-.595-.317-.815L2.503 9l6.18-6.545c.194-.22.317-.508.317-.815C9 .998 8.533.5 7.951.5a.965.965 0 0 0-.732.326L.361 8.118A1.223 1.223 0 0 0 0 9Z'/%3E%3C/svg%3E");
    background-position: center;
    background-repeat: no-repeat;
    width: 25px;
    height: 30px;
  }

  &.qs-right {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='9' height='18' viewBox='0 0 9 18'%3E%3Cpath fill='%234440F6' d='M9 9a1.3 1.3 0 0 0-.361-.882L1.78.826A.979.979 0 0 0 1.049.5C.459.5 0 .998 0 1.64c0 .307.115.595.317.815L6.487 9l-6.17 6.545A1.18 1.18 0 0 0 0 16.36c0 .642.458 1.14 1.049 1.14a.993.993 0 0 0 .732-.326l6.858-7.302C8.885 9.622 9 9.335 9 9Z'/%3E%3C/svg%3E");
    background-position: center;
    background-repeat: no-repeat;
    width: 25px;
    height: 30px;
  }

  &:hover {
    &.qs-left:after {
      border-right-color: $color-black-primary;
    }

    &.qs-right:after {
      border-left-color: $color-black-primary;
    }
  }

  &:after {
    border: math.div($width, 40) solid transparent;
    position: absolute;
    top: 50%;
    transition: border 0.2s;
  }

  &.qs-left:after {
    border-right-color: gray;
    right: 50%;
    transform: translate(25%, -50%);
  }

  &.qs-right:after {
    border-left-color: gray;
    left: 50%;
    transform: translate(-25%, -50%);
  }
}

.qs-month-year {
  // font-weight: bold;
  font-weight: 500;
  font-size: 16px;
  line-height: 22px;
  transition: border 0.2s;
  border-bottom: 1px solid transparent;

  &:not(.qs-disabled-year-overlay) {
    cursor: pointer;

    &:hover {
      border-bottom: 1px solid $color-gray-primary;
    }
  }

  &:focus,
  &:active:focus {
    outline: none;
  }
}

.qs-month {
  padding-right: 0.5ex;
}

.qs-year {
  padding-left: 0.5ex;
}

.qs-squares {
  display: flex;
  flex-wrap: wrap;
  padding: $width * 0.02;
  filter: blur(0px);
  transition: filter $transition;

  &.qs-blur {
    filter: blur(5px);
  }
}

.qs-square {
  // width: #{'calc(100% / 7)'};
  // height: math.div($width, 10);
  width: 33px;
  height: 33px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background 0.1s;

  // Overriden for date-range dates below.
  border-radius: 50%;

  &:not(.qs-empty):not(.qs-disabled):not(.qs-day):not(.qs-active) {
    &:hover {
      background: $color-accent;
      color: $color-white-primary;
    }
  }
}

// Today's date
.qs-current {
  font-weight: bold;
  text-decoration: underline;
}

/*
  3 possibilities:
    1. Single, active date.
    2. Daterange start selection.
    3. Daterange end selection.
*/
.qs-active,
.qs-range-start,
.qs-range-end {
  background: $color-accent;
  color: $color-white-primary;
}

// Daterange start selection.
.qs-range-start {
  &:not(.qs-range-6) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }
}

// Daterange middle selections.
.qs-range-middle {
  background: lighten($lightblue, 10%);

  &:not(.qs-range-0):not(.qs-range-6) {
    border-radius: 0;
  }

  &.qs-range-0 {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  &.qs-range-6 {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
}

// Daterange end selection.
.qs-range-end {
  &:not(.qs-range-0) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
}

.qs-disabled,
.qs-outside-current-month {
  opacity: 0.2;
}

.qs-disabled {
  cursor: not-allowed;
}

.qs-empty {
  cursor: default;
}

.qs-day {
  cursor: default;
  font-weight: 400;
  font-size: 12px;
  line-height: 18px;
  color: rgba(60, 60, 67, 0.3);
}

.qs-event {
  position: relative;

  &:after {
    content: '';
    position: absolute;
    width: $width * 0.03;
    height: $width * 0.03;
    border-radius: 50%;
    background: $color-accent;
    bottom: 0;
    right: 0;
  }
}
